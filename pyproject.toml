[project]
name = "infrastructure-home-test"
requires-python = ">= 3.13"
version = "0.1.0"
dependencies = ["pulumi>=3.150.0,<4", "ruff>=0.9.6,<0.10", "pulumi-gcp>=8.18.0,<9", "pulumi-kubernetes>=4.21.1,<5"]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64"]

[tool.pixi.pypi-dependencies]
infrastructure_home_test = { path = ".", editable = true }

[tool.pixi.feature.test.pypi-dependencies]
pytest = "*"

[tool.pixi.environments]
default = []
test = ["test"]

[tool.pixi.tasks]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py313" # Should match the version of Python from environment.yaml
[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "W",
    "C901",
    "I",
    "N",
    "UP",
    "S",
    "B",
    "A",
    "TID",
    "TC",
    "NPY",
    "D",
]
ignore = [
    "B008", # Function calls in argument defaults can be convenient
    "D212", # We don't want docstrings to start on the first line
    "D200", # We don't want docstrings to be forced on one-line
    "D415", # We don't care about closing punctuation in docstrings
    "D205", # We don't care about blank lines between summary line and description in docstrings
    "S101", # Asserts are used by pytest
]


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.pyright]
typeCheckingMode = "basic"
autoSearchPaths = true
useLibraryCodeForTypes = true
reportOptionalMemberAccess = true
